#!/bin/bash


# extra preparation when compiling on the OSG submit host
load_osg(){
  # load lmod
  source /cvmfs/oasis.opensciencegrid.org/osg/modules/lmod/current/init/bash

  # load necessary modules:
  #  - recent version of gcc, for c++11 among other things
  #  - recent version of cmake
  #  - boost for c++ codes
  #  - hdf5 for trento
  #  - python and packages for generating the vishnew EOS table
  module purge
  module load gcc/6.2.0 cmake boost/1.62.0 gsl/2.3 hdf5/1.8.13 python/3.5.2 all-pkgs

  # the modules set the standard environment variables CPATH and LIBRARY_PATH
  # set corresponding variables for cmake
  export CMAKE_INCLUDE_PATH=$CPATH
  export CMAKE_LIBRARY_PATH=$LIBRARY_PATH

  # set c++ and fortran compiler flags
  export CFLAGS="-march=x86-64 -mtune=intel"
  export FFLAGS="$CFLAGS"
  export CXXFLAGS="-march=x86-64 -mtune=intel -D_GLIBCXX_USE_CXX11_ABI=0"


  # explicitly set fortran compiler to override cmake default
  export FC='gfortran'

  # set linker flags to prefer the module versions of libraries to the system versions
  # the linker reads $LIBRARY_PATH but gives it lower priority than the standard paths
  # this uses -L flags to give $LIBRARY_PATH higher priority
  export LDFLAGS="-L${LIBRARY_PATH//:/ -L}"
}

if [[ $(hostname) == 'xd-login.opensciencegrid.org' ]]; then
  load_osg
fi

pkgname='hic_3D-osg'

# create a temporary directory for installing files
installdir=$(mktemp --directory)
# and ensure it's cleaned on exit
trap "rm -r $installdir" EXIT


# build each model
for i in models/*/; do
  pushd $i

  if [[ $(basename $i) == "diffusion" ]] && [[ $(hostname) =~ opensciencegrid.org|osgconnect.net ]]; then
    module unload gcc
    FC=/cvmfs/oasis.opensciencegrid.org/osg/modules/hdf5/1.8.13/bin/h5fc
    FFLAGS='-march=x86-64 -ffast-math'
  fi

  # if build with Cmake
  if [[ -f CMakeLists.txt ]]; then
    # create build directory and run cmake if necessary
    if [[ -d build ]]; then
      cd build
    else
      mkdir build && cd build
      # disable install prefix by setting it to "/"
      # the actual install location will be set by DESTDIR later
      cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX="/" \
        .. || exit 1
    fi
    # compile and install to the temporary directory
    make --jobs=$(nproc) DESTDIR=$installdir/$pkgname install || exit 1
  elif [[ -f setup.py ]]; then
    load_osg
    export PYTHONPATH=$PYTHONPATH:"$(echo $installdir/$pkgname/lib/python3.5/site-packages/)"
    python3 setup.py install --no-compile --root=$installdir/$pkgname --prefix= || exit 1
 else
    echo "unknow build system for model $i"
    exit 1
  fi

#  if [[ $(basename $i) == "vishnew" || $(basename $i) == "diffusion" ]] && [[ $(hostname) =~ opensciencegrid.org|osgconnect.net ]]; then
  if [[ $(hostname) =~ opensciencegrid.org|osconnect.net ]]; then
    load_osg
  fi

  popd
done

# install the event runner script
mkdir $installdir/$pkgname/results/
# cp models/processing_event $installdir/$pkgname/bmsap/
# cp models/processing_event_updated $installdir/$pkgname/bmsap/
cp models/run-events $installdir/$pkgname/

# create tgz for distributing to each job
tar --verbose --create --gzip --file $pkgname.tar.gz \
  --directory $installdir $pkgname
